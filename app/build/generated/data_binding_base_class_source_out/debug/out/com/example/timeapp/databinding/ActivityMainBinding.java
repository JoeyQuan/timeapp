// Generated by view binder compiler. Do not edit!
package com.example.timeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.timeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button cancelAlarmButton;

  @NonNull
  public final TextView descriptionTextView;

  @NonNull
  public final Button setAlarmButton;

  @NonNull
  public final TextView statusTextView;

  @NonNull
  public final TimePicker timePicker;

  @NonNull
  public final TextView timePickerLabel;

  @NonNull
  public final TextView titleTextView;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button cancelAlarmButton,
      @NonNull TextView descriptionTextView, @NonNull Button setAlarmButton,
      @NonNull TextView statusTextView, @NonNull TimePicker timePicker,
      @NonNull TextView timePickerLabel, @NonNull TextView titleTextView) {
    this.rootView = rootView;
    this.cancelAlarmButton = cancelAlarmButton;
    this.descriptionTextView = descriptionTextView;
    this.setAlarmButton = setAlarmButton;
    this.statusTextView = statusTextView;
    this.timePicker = timePicker;
    this.timePickerLabel = timePickerLabel;
    this.titleTextView = titleTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelAlarmButton;
      Button cancelAlarmButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelAlarmButton == null) {
        break missingId;
      }

      id = R.id.descriptionTextView;
      TextView descriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTextView == null) {
        break missingId;
      }

      id = R.id.setAlarmButton;
      Button setAlarmButton = ViewBindings.findChildViewById(rootView, id);
      if (setAlarmButton == null) {
        break missingId;
      }

      id = R.id.statusTextView;
      TextView statusTextView = ViewBindings.findChildViewById(rootView, id);
      if (statusTextView == null) {
        break missingId;
      }

      id = R.id.timePicker;
      TimePicker timePicker = ViewBindings.findChildViewById(rootView, id);
      if (timePicker == null) {
        break missingId;
      }

      id = R.id.timePickerLabel;
      TextView timePickerLabel = ViewBindings.findChildViewById(rootView, id);
      if (timePickerLabel == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, cancelAlarmButton,
          descriptionTextView, setAlarmButton, statusTextView, timePicker, timePickerLabel,
          titleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
